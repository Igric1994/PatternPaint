package org.me;

import org.me.Shapes.EllipseFactory;
import org.me.Shapes.RectangleFactory;
import org.me.Shapes.Shape;


import org.me.Shapes.ShapeFactory;
import org.me.Strategy.CursorStrategies;
import org.me.Strategy.CursorStrategy;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.awt.event.*;
import java.util.ArrayList;

public class Paint {
    public JPanel root;
    public JPanel canvas;
    public JPanel buttonContainer;
    public JComboBox comboBoxCursor;
    public JButton doButton;
    public JButton undoButton;
    public JComboBox comboBox1;
    public JComboBox comboBox2;
    public JComboBox comboBoxShape;

    Graphics2D graphics;

    public ArrayList<Shape> shapes;

    CursorStrategy strategy;

    public Paint() {
        graphics = (Graphics2D) canvas.getGraphics();
        shapes = new ArrayList<>();
        setActions();
        strategy = new CursorStrategy(this);
        canvas.addMouseListener(strategy);
        init();
    }

    private void init() {
        setShapeFactory(comboBoxShape.getSelectedItem().toString());
        setCursorStrategy(comboBoxCursor.getSelectedItem().toString());
    }

    public Graphics2D getGraphics() {
        return (Graphics2D) canvas.getGraphics();
    }

    public void setActions() {

        root.addComponentListener(new ComponentAdapter() {
            @Override
            public void componentResized(ComponentEvent e) {
                super.componentResized(e);
                totalDisplay();
            }
        });

        root.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                totalDisplay();
            }

            @Override
            public void mousePressed(MouseEvent e) {

            }

            @Override
            public void mouseReleased(MouseEvent e) {

            }

            @Override
            public void mouseEntered(MouseEvent e) {

            }

            @Override
            public void mouseExited(MouseEvent e) {

            }
        });

        comboBoxCursor.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                setCursorStrategy(e.getItem().toString());
            }
        });

        comboBoxShape.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                setShapeFactory(e.getItem().toString());
            }
        });
    }

    private void setShapeFactory(String shape) {
        switch (shape) {
            case "Rectangle" -> shapeFactory = new RectangleFactory();
            case "Ellipse" -> shapeFactory = new EllipseFactory();
        }
    }

    private void setCursorStrategy(String strat) {
        switch (strat) {
            case "Select" -> strategy.changeState(CursorStrategies.SELECT);
            case "Draw" -> strategy.changeState(CursorStrategies.DRAW);
        }
    }

    private void totalDisplay() {
        for (Shape item : shapes) {
            item.draw(getGraphics());
        }
    }

    private ShapeFactory shapeFactory;

    public void createShape(int x, int y) {
        shapes.add(shapeFactory.create(x, y));
    }

    public void createShape(int x, int y, int width, int height) {
        shapes.add(shapeFactory.create(x, y, width, height));
    }

    public void drawLast() {
        shapes.getLast().draw(getGraphics());
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        root = new JPanel();
        root.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 2, new Insets(0, 0, 0, 0), -1, -1));
        buttonContainer = new JPanel();
        buttonContainer.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), -1, -1));
        root.add(buttonContainer, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 3, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTH, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        comboBoxCursor = new JComboBox();
        final DefaultComboBoxModel defaultComboBoxModel1 = new DefaultComboBoxModel();
        defaultComboBoxModel1.addElement("Select");
        defaultComboBoxModel1.addElement("Draw");
        comboBoxCursor.setModel(defaultComboBoxModel1);
        buttonContainer.add(comboBoxCursor, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        doButton = new JButton();
        doButton.setText("do");
        buttonContainer.add(doButton, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        undoButton = new JButton();
        undoButton.setText("undo");
        buttonContainer.add(undoButton, new com.intellij.uiDesigner.core.GridConstraints(1, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        comboBox2 = new JComboBox();
        final DefaultComboBoxModel defaultComboBoxModel2 = new DefaultComboBoxModel();
        defaultComboBoxModel2.addElement("Red");
        defaultComboBoxModel2.addElement("Green");
        defaultComboBoxModel2.addElement("Blue");
        defaultComboBoxModel2.addElement("Black");
        defaultComboBoxModel2.addElement("White");
        defaultComboBoxModel2.addElement("Yellow");
        defaultComboBoxModel2.addElement("Pink");
        comboBox2.setModel(defaultComboBoxModel2);
        buttonContainer.add(comboBox2, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        comboBox1 = new JComboBox();
        final DefaultComboBoxModel defaultComboBoxModel3 = new DefaultComboBoxModel();
        defaultComboBoxModel3.addElement("Set border");
        defaultComboBoxModel3.addElement("Fill");
        comboBox1.setModel(defaultComboBoxModel3);
        buttonContainer.add(comboBox1, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        comboBoxShape = new JComboBox();
        final DefaultComboBoxModel defaultComboBoxModel4 = new DefaultComboBoxModel();
        defaultComboBoxModel4.addElement("Rectangle");
        defaultComboBoxModel4.addElement("Ellipse");
        comboBoxShape.setModel(defaultComboBoxModel4);
        buttonContainer.add(comboBoxShape, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        canvas = new JPanel();
        canvas.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        root.add(canvas, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        canvas.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(new Color(-1761999)), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return root;
    }

}
